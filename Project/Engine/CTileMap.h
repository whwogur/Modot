#pragma once
#include "CRenderComponent.h"


class CStructuredBuffer;

struct tTileInfo
{
    int ImgIdx = 2;
    int padding[3];
};

class CTileMap :
    public CRenderComponent
{

public:
    CTileMap();
    ~CTileMap();
public:
    void SetRowCol(UINT _Row, UINT _Col);
    void SetTileSize(Vec2 _Size);
    void SetAtlasTexture(Ptr<CTexture> _Atlas);
    void SetAtlasTileSize(Vec2 _TileSize);
    Ptr<CTexture> GetAtlasTexture() { return m_TileAtlas; }
public:
    virtual void FinalTick() override;
    virtual void Render() override;

private:
    void ChangeTileMapSize();
private:
    int                     m_Row;              // TileMap 의 행 숫자
    int                     m_Col;              // TileMap 의 열 숫자
    Vec2                    m_TileSize;         // Tile 1개의 크기

    Ptr<CTexture>           m_TileAtlas;        // Tile 개별 이미지들으 보유하고 있는 아틀라스 텍스쳐
    Vec2                    m_AtlasResolution;  // Atlas 텍스쳐 해상도
    Vec2                    m_AtlasTileSize;    // Atlas 텍스쳐 내에서 타일 1개의 크기
    Vec2                    m_AtlasTileSliceUV;

    int                     m_AtlasMaxRow;      // Atlas 텍스쳐가 보유하고 있는 타일의 최대 행 숫자
    int                     m_AtlasMaxCol;      // Atlas 텍스쳐가 보유하고 있는 타일의 최대 열 숫자

    vector<tTileInfo>       m_vecTileInfo;      // 각각의 타일의 정보

    std::shared_ptr<CStructuredBuffer>      m_Buffer;
};